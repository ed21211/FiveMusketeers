openapi: 3.0.3
info:
  title: Order Creation
  description: |-
    API description for the order creation process in the Digital trade service.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
# servers:
  # - url: https://petstore3.swagger.io/api/v3
tags:
  - name: "Buyer - Seller"
    description: "Routes in the Buyer - Seller interface"

  - name: "Seller - Buyer"
    description: "Routes in the Seller - Buyer interface"

components:
  schemas:
    successfulRequest:
      type: object
      properties:
        message:
          type: string
          description: "string related to the sucessful request."
    
    badRequest:
      type: object
      properties:
        message:
          type: string
          description: "Error message explaining the reason for the bad request."      
    serverError:
      type: object
      properties:
        message:
          type: string
          description: "Error message explaining the reason for the server error; lokely due to accessing and interacting with the database."   
    orderList:
      type: array
      items:
        type: object
        properties:
          productId:
            type: number
            description: "Product identification"
          productCost:
            type: number
            description: "Cost of this product"
          quantity:
            type: number
            description: "Amount the buyer wants of this specific product"
    
    orderDetails:
      type: object
      properties:
        email:
          type: string
          description: "Buyer's email"
        orders:
          type: array
          items:
            type: object
            properties:
              productId:
                type: number
                description: "Product identification"
              productCost:
                type: number
                description: "Cost of this product"
              quantity:
                type: number
                description: "Amount the buyer wants of this specific product"
        deliveryAddress:
          type: string
          description: "buyer's delivery address"
  
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic

paths:
  /buyer/login:
    post:
      tags:
        - "Buyer - Seller"
      summary: Buyer login.
      description: Adds the buyer to the database if they're a new user, and sets the buyer as logged in. 
      operationId: login
      parameters:
      - name: email
        required: true
        in: query
        description: "Buyer's email"
        schema:
          type: "string"
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successfulRequest'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serverError'
                
  /buyer/signout:
    post:
      tags:
        - "Buyer - Seller"
      summary: Buyer logout.
      description: Allows the buyer to logout using their email as confirmation. 
      operationId: signout
      parameters:
      - name: email
        required: true
        in: query
        description: "Buyer's email"
        schema:
          type: "string"
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successfulRequest'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serverError'
                
  /buyer/createOrder:
    post:
      tags:
        - "Buyer - Seller"
      summary: Create buyer's order.
      description: Allows a buyer to add products to their cart by specifying the product list and quantity.
      operationId: createOrder
      parameters:
        - name: email
          required: true
          in: query
          description: "Buyer's email"
          schema:
            type: "string"
        - name: orderList
          in: query
          description: "Buyer's list of orders"
          required: true
          schema:
            $ref: '#/components/schemas/orderList'
        - name: deliveryAddress
          required: true
          in: query
          description: "Buyer's delivery address"
          schema:
            type: "string"
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: "Order created successfully. Your order id: ${orderId}"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serverError'

  /buyer/updateOrder/{orderId}:
    put:
      tags:
        - "Buyer - Seller"
      summary: Update buyer's order.
      description: Allows a buyer to add or remove products from their cart by specifying the product list and quantity.
      operationId: updateOrder
      parameters:
        - name: orderId
          required: true
          in: path
          description: "Buyer's order id"
          schema:
            type: number
        - name: updatedOrdersList
          in: query
          description: "Buyer's list of changed orders"
          required: true
          schema:
            $ref: '#/components/schemas/orderList'
      responses:
        '200':
          description: 'Order updated successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successfulRequest'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serverError'
    
  /buyer/deleteOrder/{orderId}:
    delete:
      tags:
        - "Buyer - Seller"
      summary: Delete buyer's order.
      description: Allows a buyer to delete their whole order based on the order Id given.
      operationId: deleteOrder
      parameters:
        - name: orderId
          required: true
          in: path
          description: "Buyer's order id"
          schema:
            type: number
        - name: reason
          in: query
          description: "Reason for cancellation"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Cancelled order sucessfully"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successfulRequest'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serverError'  
  
  /buyer/orderDetails/{orderId}:
    get:
      tags:
        - "Buyer - Seller"
      summary: Buyer retrieves their order details.
      description: Buyer retrieves their order details.
      operationId: orderDetails
      parameters:
        - name: orderId
          required: true
          in: path
          description: "Buyer's order id"
          schema:
            type: number
      responses:
        '200':
          description: "Sucessfully retrieves order details"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderDetails'
        '400':
          description: Bad request 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serverError'     
  #redundant; change to buyer checkout
  /buyer/checkout/{orderId}: 
    post:
      tags:
        - "Buyer - Seller"
      summary: Provide checkout details.
      description: Allows a buyer to enter payment and delivery details to finalize their order.
      operationId: checkoutOrder
      parameters:
        - name: orderId
          required: true
          in: path
          description: "Buyer's order id"
          schema:
            type: number
        # other checkout parameters
      responses:
        '200':
          description: "Checkout details submitted successfully"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successfulRequest'
        '400':
          description: Bad request 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serverError'
             

